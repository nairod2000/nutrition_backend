# Generated by Django 4.2.5 on 2023-11-29 12:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('age', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(120)])),
                ('weight', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)])),
                ('height', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100)])),
                ('sex', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('is_pregnant', models.BooleanField(default=False)),
                ('is_lactating', models.BooleanField(default=False)),
                ('activity_level', models.CharField(blank=True, choices=[('Sedentary', 'Sedentary'), ('Lightly Active', 'Lightly Active'), ('Moderately Active', 'Moderately Active'), ('Very Active', 'Very Active'), ('Extremely Active', 'Extremely Active')], max_length=20, null=True)),
                ('diet_goal', models.CharField(blank=True, choices=[('Lose Weight', 'Lose Weight'), ('Maintain Weight', 'Maintain Weight'), ('Gain Weight', 'Gain Weight')], max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='user_set_nutrition', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='user_set_nutrition', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CombinedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='GoalTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('sex', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('isPregnant', models.BooleanField(default=False)),
                ('isLactating', models.BooleanField(default=False)),
                ('ageMin', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(120)])),
                ('ageMax', models.PositiveIntegerField(default=120, validators=[django.core.validators.MaxValueValidator(120)])),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(db_index=True)),
                ('barcode', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('calories', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100000)])),
                ('isCustom', models.BooleanField(default=False)),
                ('favoritedBy', models.ManyToManyField(related_name='favorites', through='nutrition.FavoriteItem', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Nutrient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('isCategory', models.BooleanField(default=False)),
                ('parentNutrient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nutrition.nutrient')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256, null=True, unique=True)),
                ('abbreviation', models.CharField(blank=True, max_length=256, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('calories', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100000)])),
                ('isActive', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserGoalNutrient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('targetValue', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.usergoal')),
                ('nutrient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.nutrient')),
            ],
        ),
        migrations.AddField(
            model_name='usergoal',
            name='nutrients',
            field=models.ManyToManyField(related_name='goals', through='nutrition.UserGoalNutrient', to='nutrition.nutrient'),
        ),
        migrations.AddField(
            model_name='usergoal',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.goaltemplate'),
        ),
        migrations.AddField(
            model_name='usergoal',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ServingSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.unit')),
            ],
        ),
        migrations.AddField(
            model_name='nutrient',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.unit'),
        ),
        migrations.CreateModel(
            name='ItemNutrient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.item')),
                ('nutrient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.nutrient')),
            ],
        ),
        migrations.CreateModel(
            name='ItemBioactive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.item')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.unit')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='nutrients',
            field=models.ManyToManyField(related_name='items', through='nutrition.ItemNutrient', to='nutrition.nutrient'),
        ),
        migrations.AddField(
            model_name='item',
            name='servingSize',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.servingsize'),
        ),
        migrations.AddField(
            model_name='item',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='GoalTemplateNutrient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendedValue', models.DecimalField(decimal_places=2, default=0, max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('nutrient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.nutrient')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.goaltemplate')),
            ],
        ),
        migrations.AddField(
            model_name='goaltemplate',
            name='nutrients',
            field=models.ManyToManyField(related_name='templates', through='nutrition.GoalTemplateNutrient', to='nutrition.nutrient'),
        ),
        migrations.AddField(
            model_name='favoriteitem',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.item'),
        ),
        migrations.AddField(
            model_name='favoriteitem',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Consumed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consumedAt', models.DateTimeField(auto_now_add=True)),
                ('portion', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('combinedItem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nutrition.combineditem')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nutrition.item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CombinedItemElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('portion', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('combinedItem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.combineditem')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.item')),
            ],
        ),
    ]
